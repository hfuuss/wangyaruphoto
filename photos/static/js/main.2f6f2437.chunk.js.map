{"version":3,"sources":["logo.svg","components/GalleryPhoto.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","photos","src","width","height","GalleryPhoto","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentImage","closeLightbox","bind","assertThisInitialized","openLightbox","gotoNext","gotoPrevious","event","obj","setState","index","lightboxIsOpen","react_default","a","createElement","react_photo_gallery_esm","onClick","Lightbox_default","images","onClose","onClickPrev","onClickNext","isOpen","React","Component","App","className","GalleryPhoto_GalleryPhoto","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2f6f2437.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\nimport Gallery from 'react-photo-gallery';\nimport Lightbox from 'react-images';\n\n\nconst photos = [\n  {\n    src: 'http://images.hfuusec.cn/18-12-28/36945969.jpg',\n    width: 4,\n    height: 5\n  },\n  {\n    src: 'http://images.hfuusec.cn/18-12-28/52902299.jpg',\n    width: 1,\n    height: 1\n  },\n  {\n    src: 'http://images.hfuusec.cn/18-12-28/61565077.jpg',\n    width: 1,\n    height: 1\n  },\n  {\n    src: 'http://images.hfuusec.cn/18-12-28/26270668.jpg',\n    width: 1,\n    height: 1\n  },\n  {\n    src: 'http://images.hfuusec.cn/18-12-28/76561905.jpg',\n    width: 1,\n    height: 1\n  },\n  {\n    src: 'http://images.hfuusec.cn/18-12-28/72791839.jpg',\n    width: 1,\n    height: 1\n  },\n  {\n    src: 'http://images.hfuusec.cn/18-12-28/22930556.jpg',\n    width: 1,\n    height: 1\n  },\n  {\n    src: 'http://images.hfuusec.cn/18-12-28/62974480.jpg',\n    width: 1,\n    height: 1\n  },\n  {\n    src: 'http://images.hfuusec.cn/18-12-28/31005712.jpg',\n    width: 1,\n    height: 1\n  },\n  {\n    src: 'http://images.hfuusec.cn/18-12-28/40711274.jpg',\n    width: 1,\n    height: 1\n  },\n  {\n    src: 'http://images.hfuusec.cn/18-12-28/33408370.jpg',\n    width: 1,\n    height: 1\n  },\n  {\n    src: 'http://images.hfuusec.cn/18-12-28/49708606.jpg',\n    width: 1,\n    height: 1\n  },\n  {\n    src: 'http://images.hfuusec.cn/18-12-28/93613437.jpg',\n    width: 1,\n    height: 1\n  },\n  {\n    src: 'http://images.hfuusec.cn/18-12-28/21467628.jpg',\n    width: 1,\n    height: 1\n  },\n  {\n    src: 'http://images.hfuusec.cn/18-12-28/40159617.jpg',\n    width: 1,\n    height: 1\n  },\n  {\n    src: 'http://images.hfuusec.cn/18-12-28/17058251.jpg',\n    width: 1,\n    height: 1\n  },\n  {\n    src: 'http://images.hfuusec.cn/18-12-28/61565077.jpg',\n    width: 1,\n    height: 1\n  },\n  {\n    src: 'http://images.hfuusec.cn/18-12-28/52902299.jpg',\n    width: 1,\n    height: 1\n  },\n  {\n    src: 'http://images.hfuusec.cn/18-12-28/37516178.jpg',\n    width: 1,\n    height: 1\n  },\n];\n\nexport default class GalleryPhoto extends React.Component {\n\n  constructor() {\n    super();\n    this.state = { currentImage: 0 };\n    this.closeLightbox = this.closeLightbox.bind(this);\n    this.openLightbox = this.openLightbox.bind(this);\n    this.gotoNext = this.gotoNext.bind(this);\n    this.gotoPrevious = this.gotoPrevious.bind(this);\n  }\n  openLightbox(event, obj) {\n    this.setState({\n      currentImage: obj.index,\n      lightboxIsOpen: true,\n    });\n  }\n  closeLightbox() {\n    this.setState({\n      currentImage: 0,\n      lightboxIsOpen: false,\n    });\n  }\n  gotoPrevious() {\n    this.setState({\n      currentImage: this.state.currentImage - 1,\n    });\n  }\n  gotoNext() {\n    this.setState({\n      currentImage: this.state.currentImage + 1,\n    });\n  }\n\n    render() {\n\treturn (\n    <div>\n      <Gallery photos={photos} onClick={this.openLightbox} />\n        <Lightbox images={photos}\n          onClose={this.closeLightbox}\n          onClickPrev={this.gotoPrevious}\n          onClickNext={this.gotoNext}\n          currentImage={this.state.currentImage}\n          isOpen={this.state.lightboxIsOpen}\n        />\n    </div>\n\t);\n    }\n}\n","import React, { Component } from 'react';\nimport GalleryPhoto from './components/GalleryPhoto';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <GalleryPhoto></GalleryPhoto>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}